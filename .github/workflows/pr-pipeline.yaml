name: CI PR - Pull Request CI Pipeline
on:
  pull_request:
    types: [opened, synchronize, reopened]


# ------------------
# Application Values
# ------------------
env:
  SERVICE_NAME: bfi-task-allocation
  SONAR_ORG: bfi-finance
  SONAR_PROJECT_KEY: bfi-finance_bfi-task-allocation


jobs:
# -----------------------------------
# Application Security Scan with SNYK
# -----------------------------------
  lint-code:
    name: Lint and Style Check Code - Maven/Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          architecture: x64
          distribution: 'corretto'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Lint Code by compilation
        run: make compile

      - name: Check Code Style with Prettier
        run: make check-style


# -----------------------------------
# Application Security Scan with SNYK
# -----------------------------------
  security-analysis:
    needs: [lint-code]
    name: Security Scan - SNYK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Check vulnerabilities with Snyk
        uses: snyk/actions/maven@master
        continue-on-error: false
        env:
          BFI_SNYK_TOKEN: ${{ secrets.BFI_SNYK_TOKEN }}
        with:
          args:
            --all-projects
            --severity-threshold=high


# -----------------------------------------------
# Application Static code analysis with SonarQube
# -----------------------------------------------
  static-analysis:
    needs: [lint-code]
    name: Static Analysis - SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # THIS IS NEEDED HERE (Sonar needs full history for BLAME)

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          architecture: x64
          distribution: 'corretto'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository/
            ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: |
            ${{ runner.os }}-sonar

      - name: Verify with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.BFI_SONAR_TOKEN }}
        run: >
          mvn verify sonar:sonar
          -Dsonar.organization=${{ env.SONAR_ORG }}
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
          -Dsonar.host.url=${{ secrets.BFI_SONAR_HOST_URL }}


# --------------------------------
# Lint and compile code with Maven
# --------------------------------
  compile_code:
    needs: [security-analysis, static-analysis]
    name: Compile code and build JAR - Maven
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          architecture: x64
          distribution: 'corretto'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build and analyze
        run: make compile


